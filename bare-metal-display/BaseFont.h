/**
 * Abstract class, used for inheritance
 */

#ifndef BASEFONT_H
#define BASEFONT_H

#include <functional>

class BaseFont {
public:
    /**
     * Because fonts can be generated by various utils
     * All fonts must be able to render char on display.
     * In other words, char rendering method is font's responsibility
     * @param x - x-axis start point
     * @param y - y-axis start point
     * @param c - char (char16_t because of national fonts)
     * @param function - which now how to render pixel (display responsibility)
     * @return - cursor x-position after char rendered, or error-code (like -1, etc.)
     */
    virtual int32_t drawChar(uint32_t x, uint32_t y, char16_t c, std::function<int8_t(uint32_t, uint32_t)>) = 0;
};

#endif //BASEFONT_H
